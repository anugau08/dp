import cv2                 # Import OpenCV for image processing
import numpy as np         # Import NumPy for numerical operations

# Import the function to display images in Google Colab
from google.colab.patches import cv2_imshow

# Step 1: Read the original image
img = cv2.imread('/content/ogIMG.bmp')  # Load the image from the specified path

# Display the original image
print('Original image')
cv2_imshow(img)            # Display the original image

# Step 2: Perform dilation
kernel = np.ones((12, 12), np.uint8)  # Create a 12x12 square structuring element (kernel)
img_dilation = cv2.dilate(img, kernel, iterations=1)  # Apply dilation with one iteration
print('Dilated image')     # Print a description
cv2_imshow(img_dilation)   # Display the dilated image

# Step 3: Perform erosion
kernel1 = np.ones((10, 10), np.uint8)  # Create a 10x10 square structuring element
img_erosion = cv2.erode(img, kernel1, iterations=1)  # Apply erosion with one iteration
print('Eroded image')      # Print a description
cv2_imshow(img_erosion)    # Display the eroded image

# Step 4: Perform morphological opening
kernel2 = cv2.getStructuringElement(cv2.MORPH_RECT, (17, 17))  # Create a rectangular 17x17 kernel
opening = cv2.morphologyEx(img, cv2.MORPH_OPEN, kernel2)  # Apply morphological opening
print('Opening image')     # Print a description
cv2_imshow(opening)        # Display the image after opening

# Step 5: Perform morphological closing
kernel3 = cv2.getStructuringElement(cv2.MORPH_RECT, (45, 45))  # Create a rectangular 45x45 kernel
closing = cv2.morphologyEx(img, cv2.MORPH_CLOSE, kernel3)  # Apply morphological closing
print('Closing image')     # Print a description
cv2_imshow(closing)        # Display the image after closing
